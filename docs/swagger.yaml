info:
  contact: {}
  title: 毛球社区
paths:
  /v1/BlogCmt/create:
    post:
      consumes:
      - application/json
      description: 根据用户id、博客id，添加一个新的评论 eg：{ "user_id":1, "blog_id":2, "content":"文章很有用"
        }
      parameters:
      - description: userid + blogId + content
        in: body
        name: blogCmt
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: 创建博客评论
      tags:
      - BlogCmt
  /v1/api/getCaptcha:
    get:
      consumes:
      - application/json
      description: 获取一张图形验证码，同时返回captchaId
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: 获取图形验证码
      tags:
      - captcha
  /v1/api/verifyCaptcha:
    post:
      consumes:
      - application/json
      description: 验证图形验证码 eg：{ "CaptchaId":"mFXBu7EueGbtNqsErYdm", "VerifyValue":"vvsz"
        }
      parameters:
      - description: CaptchaId+VerifyValue
        in: body
        name: CaptchaVerifyHandle
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: 验证图形验证码
      tags:
      - captcha
  /v1/blog/create:
    post:
      consumes:
      - application/json
      description: '创建一个社区文章 eg：{"user_id":2, "title":"标题", "content": "hhh"}'
      parameters:
      - description: userid + title + content
        in: body
        name: blog
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: 创建社区文章
      tags:
      - Blog
  /v1/blog/delete/{blog_id}:
    delete:
      consumes:
      - application/json
      description: 通过blog_id删除博客
      parameters:
      - description: blog_id
        in: path
        name: blog_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: 删除博客
      tags:
      - Blog
  /v1/blog/getBlogList:
    get:
      consumes:
      - application/json
      description: 获取所有社区文章
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: 获取社区文章列表
      tags:
      - Blog
  /v1/blog/getUserBlog/{id}:
    get:
      consumes:
      - application/json
      description: 通过用户id获取用户文章列表
      parameters:
      - description: user_id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: 获取用户文章列表
      tags:
      - Blog
  /v1/blog/info/{id}:
    get:
      consumes:
      - application/json
      description: 通过blog_id获取文章信息
      parameters:
      - description: blog_id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: 获取文章信息
      tags:
      - Blog
    put:
      consumes:
      - application/json
      description: 通过id，更新blog，包括内容和标题等 eg：{"title":"wangwang", "content":"hhh"}
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: new_blog_info
        in: body
        name: blog
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: 更新社区文章
      tags:
      - Blog
  /v1/blog/like:
    put:
      consumes:
      - application/json
      description: 通过用户id和博客id完成点赞博客操作
      parameters:
      - description: user_id
        in: query
        name: userid
        required: true
        type: integer
      - description: blog_id
        in: query
        name: blogid
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: 点赞博客（暂不可用）
      tags:
      - Blog
  /v1/blogCmt/delete/{blog_cmt_id}:
    delete:
      consumes:
      - application/json
      description: 通过blogCmtID，删除文章评论 eg：{ "blogCmtID":"5"}
      parameters:
      - description: blog_cmt_id
        in: path
        name: blog_cmt_id
        required: true
        type: integer
      responses: {}
      summary: 删除文章评论
      tags:
      - BlogCmt
  /v1/blogCmt/getList/{blog_id}:
    get:
      consumes:
      - application/json
      description: 根据博客id获取评论列表
      parameters:
      - description: blog_id
        in: path
        name: blog_id
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      summary: 获取文章的评论列表
      tags:
      - BlogCmt
  /v1/order/create:
    post:
      consumes:
      - application/json
      description: 根据用户id，创建一个新的订单 eg：{ "pet_id":3, "announcer_id":2 }
      parameters:
      - description: petname + userid
        in: body
        name: order
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: 创建订单
      tags:
      - Order
  /v1/order/delete/{order_id}:
    delete:
      consumes:
      - application/json
      description: 根据订单id删除订单
      parameters:
      - description: order_id
        in: path
        name: order_id
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      summary: 删除订单
      tags:
      - Order
  /v1/order/getOrderInfoById/{order_id}:
    get:
      consumes:
      - application/json
      description: 根据订单id获取详情
      parameters:
      - description: order_id
        in: path
        name: order_id
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      summary: 获取订单信息
      tags:
      - Order
  /v1/order/getOrderList/{user_id}:
    get:
      consumes:
      - application/json
      description: 根据用户id获取订单列表
      parameters:
      - description: user_id
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      summary: 获取用户的订单列表
      tags:
      - Order
  /v1/order/getOrderOfPet/{pet_id}:
    get:
      consumes:
      - application/json
      description: 根据宠物id获取订单
      parameters:
      - description: pet_id
        in: path
        name: pet_id
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      summary: 获取宠物的订单
      tags:
      - Order
  /v1/order/updateOrderInfo/{order_id}:
    put:
      consumes:
      - application/json
      description: 通过订单id，更新接收者、开始结束时间、地点、健康、订单状态、备注、价格、评价、评分等 eg：{"receiver_id":1}
      parameters:
      - description: order_id
        in: path
        name: order_id
        required: true
        type: integer
      - description: new_order_info
        in: body
        name: user
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: 更改订单信息
      tags:
      - Order
  /v1/orderCmt/create:
    post:
      consumes:
      - application/json
      description: 根据用户id、订单id，添加一个新的订单评论 eg：{ "user_id":1, "order_id":2, "content":"宠物照顾的针布戳呢"
        }
      parameters:
      - description: userid + orderId + content
        in: body
        name: orderCmt
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: 创建订单评论
      tags:
      - OrderCmt
  /v1/orderCmt/deleteOrderCmt/{order_cmt_id}:
    delete:
      consumes:
      - application/json
      description: 通过orderCmtID，删除订单评论 eg：{ "orderCmtID":"5"}
      parameters:
      - description: order_cmt_id
        in: path
        name: order_cmt_id
        required: true
        type: integer
      responses: {}
      summary: 删除订单评论
      tags:
      - OrderCmt
  /v1/orderCmt/getOrderCmtList/{order_id}:
    get:
      consumes:
      - application/json
      description: 根据订单id获取评论列表
      parameters:
      - description: order_id
        in: path
        name: order_id
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      summary: 获取订单的评论列表
      tags:
      - OrderCmt
  /v1/pet/add:
    post:
      consumes:
      - application/json
      description: 添加一个新的宠物 eg：{"pet_name":"xiaohuang","user_id":2 }
      parameters:
      - description: petname + userid
        in: body
        name: pet
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: 添加宠物
      tags:
      - Pet
  /v1/pet/deletePet/{id}:
    delete:
      consumes:
      - application/json
      description: 通过id，删除宠物 eg：{ "id":"5"}
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      responses: {}
      summary: 删除宠物
      tags:
      - Pet
  /v1/pet/getPetInfoByID/{id}:
    get:
      consumes:
      - application/json
      description: 通过宠物id查询宠物信息
      parameters:
      - description: pet_id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: 通过宠物id查询宠物信息
      tags:
      - Pet
  /v1/pet/getPetList/{id}:
    get:
      consumes:
      - application/json
      description: 根据用户id获取宠物列表
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      summary: 获取宠物列表
      tags:
      - Pet
  /v1/pet/updatePetInfo/{id}:
    put:
      consumes:
      - application/json
      description: 通过id，更新宠物信息，包括宠物名称、年龄、重量、绝育信息、品种和健康情况等 eg：{"pet_name":"wangwang",
        "gender":1, "age":2, "weight":33, "sterilization":1, "breed":"taidi", "health":"yes"
        }
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: new_pet_info
        in: body
        name: pet
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: 更改宠物信息
      tags:
      - Pet
  /v1/user/deleteUser/{id}:
    delete:
      consumes:
      - application/json
      description: 通过id，删除用户 eg：{ "id":"7"}
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      responses: {}
      summary: 删除用户
      tags:
      - User
  /v1/user/getUserList:
    get:
      consumes:
      - application/json
      description: 获取所有用户信息
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: 获取用户列表
      tags:
      - User
  /v1/user/login:
    post:
      consumes:
      - application/json
      description: 通过id和pw登录 eg：{ "account":"wbq", "password":"123" }
      parameters:
      - description: account+password
        in: body
        name: user
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: 用户登录
      tags:
      - User
  /v1/user/loginWithPhone:
    post:
      consumes:
      - application/json
      description: 通过id和pw登录 eg：{ "phone":"13533337492", "code":"123456" }
      parameters:
      - description: phone+code
        in: body
        name: user
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: 手机验证码登录
      tags:
      - User
  /v1/user/register:
    post:
      consumes:
      - application/json
      description: 注册一个新的用户 eg：{ "account":"wbq", "password":"123" }
      parameters:
      - description: account+password
        in: body
        name: user
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: 用户注册
      tags:
      - User
  /v1/user/updatePassword/{id}:
    put:
      consumes:
      - application/json
      description: 通过id，修改密码 eg：{"password":"123" }
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: new_pwd
        in: body
        name: user
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses: {}
      summary: 更改密码
      tags:
      - User
  /v1/user/updateUsername/{id}:
    put:
      consumes:
      - application/json
      description: 通过id，修改用户名 eg：{"username":"wangwang" }
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: new_name
        in: body
        name: user
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: 更改用户名
      tags:
      - User
  /v2/user/getUserById/{id}:
    get:
      consumes:
      - application/json
      description: 根据用户id获取用户信息
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      summary: 获取用户信息
      tags:
      - User
  /v2/user/updateUserInfo/{id}:
    put:
      consumes:
      - application/json
      description: 通过id，更新用户信息，包括手机号、权限等级、性别、地址、分数、简介、身份证号、头像、养宠经验、工作时间、可养宠数量和身份证照片等，用户名和密码由原接口修改
        eg：{"gender":1}
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: new_pet_info
        in: body
        name: user
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: 更改用户信息
      tags:
      - User
swagger: "2.0"
